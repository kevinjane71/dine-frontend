// Internationalization (i18n) configuration
const translations = {
  en: {
    // Common
    common: {
      loading: 'Loading...',
      error: 'Error',
      success: 'Success',
      cancel: 'Cancel',
      save: 'Save',
      delete: 'Delete',
      edit: 'Edit',
      add: 'Add',
      close: 'Close',
      confirm: 'Confirm',
      yes: 'Yes',
      no: 'No',
      search: 'Search',
      filter: 'Filter',
      clear: 'Clear',
      submit: 'Submit',
      back: 'Back',
      next: 'Next',
      previous: 'Previous',
      done: 'Done',
      retry: 'Retry',
      refresh: 'Refresh',
      view: 'View',
      details: 'Details',
      settings: 'Settings',
      profile: 'Profile',
      logout: 'Logout',
      login: 'Login',
      register: 'Register',
      email: 'Email',
      password: 'Password',
      phone: 'Phone',
      name: 'Name',
      address: 'Address',
      city: 'City',
      state: 'State',
      country: 'Country',
      zipCode: 'ZIP Code',
      date: 'Date',
      time: 'Time',
      amount: 'Amount',
      quantity: 'Quantity',
      total: 'Total',
      subtotal: 'Subtotal',
      tax: 'Tax',
      discount: 'Discount',
      price: 'Price',
      status: 'Status',
      description: 'Description',
      notes: 'Notes',
      category: 'Category',
      available: 'Available',
      unavailable: 'Unavailable',
      active: 'Active',
      inactive: 'Inactive',
      pending: 'Pending',
      completed: 'Completed',
      cancelled: 'Cancelled',
      processing: 'Processing...',
      veg: 'Veg',
      nonVeg: 'Non-Veg',
      mild: 'Mild',
      medium: 'Medium',
      hot: 'Hot',
      items: 'items'
    },
    
    // Navigation
    nav: {
      dashboard: 'Dashboard',
      menu: 'Menu',
      orders: 'Orders',
      tables: 'Tables',
      customers: 'Customers',
      inventory: 'Inventory',
      analytics: 'Analytics',
      billing: 'Billing',
      admin: 'Admin',
      history: 'Orders',
      kot: 'Kitchen'
    },
    
    // Login Page
    login: {
      title: 'Welcome to DineOpen',
      subtitle: 'Restaurant Management System',
      restaurantOwner: 'Restaurant Owner',
      staffMember: 'Staff Member',
      phoneLogin: 'Phone Login',
      googleLogin: 'Continue with Google',
      enterPhone: 'Enter your phone number',
      phonePlaceholder: '+91 9876543210',
      validPhone: 'Valid phone number',
      sendingOtp: 'Sending OTP...',
      sendOtp: 'Send OTP',
      orContinueWith: 'Or continue with',
      signingIn: 'Signing in...',
      googleDescription: 'Restaurant owners can create accounts using Google',
      enterOtp: 'Enter OTP',
      otpPlaceholder: 'Enter 6-digit OTP',
      verifyOtp: 'Verify OTP',
      resendOtp: 'Resend OTP',
      invalidPhone: 'Please enter a valid phone number',
      invalidOtp: 'Please enter a valid 6-digit OTP',
      loginSuccess: 'Login successful!',
      loginError: 'Login failed. Please try again.',
      otpSent: 'OTP sent successfully!',
      otpError: 'Failed to send OTP. Please try again.',
      verificationError: 'OTP verification failed. Please try again.',
      loginCancelled: 'Login cancelled. Please try again.',
      popupBlocked: 'Popup blocked. Please allow popups and try again.',
      defaultOtp: 'For demo, use OTP: 1234',
      newUser: 'New user? You will be redirected to setup.',
      existingUser: 'Welcome back!'
    },
    
    // Dashboard
    dashboard: {
      title: 'Order Management',
      addItem: 'Add Item',
      searchOrder: 'Search by Table No. or Order ID...',
      quickAdd: 'Quick add: type name or code...',
      orderSummary: 'Order Summary',
      menuCategories: 'Menu Categories',
      yourOrder: 'Your Order',
      clearOrder: 'Clear Order',
      placeOrder: 'Place Order',
      saveOrder: 'Save Order',
      completeBilling: 'Complete Billing',
      tableNumber: 'Table Number',
      customerName: 'Customer Name',
      customerPhone: 'Customer Phone',
      dineIn: 'DINE IN',
      takeaway: 'TAKEAWAY',
      noItems: 'No items in cart',
      totalAmount: 'Total Amount',
      paymentMethod: 'Payment Method',
      cash: 'Cash',
      card: 'Card',
      upi: 'UPI',
      orderPlaced: 'Order placed successfully!',
      orderCompleted: 'Order completed successfully!',
      paymentCompleted: 'Payment completed successfully!',
      selectPaymentMethod: 'Please select a payment method',
      enterTableNumber: 'Please enter table number',
      enterCustomerInfo: 'Please enter customer information',
      emptyCart: 'Cart is empty',
      addItemsFirst: 'Please add items to cart first',
      orderProcessing: 'Processing order...',
      paymentProcessing: 'Processing payment...'
    },
    
    // Menu
    menu: {
      title: 'Menu Management',
      addNewDish: 'Add New Dish',
      bulkUpload: 'Bulk Upload',
      searchMenu: 'Search dishes...',
      allTypes: 'All Types',
      allCategories: 'All Categories',
      gridView: 'Grid View',
      listView: 'List View',
      noDishesFound: 'No dishes found',
      menuReady: 'Menu Management Ready! üçΩÔ∏è',
      tryDifferentSearch: 'Try different search terms',
      createMenu: 'Create Your Restaurant Menu',
      trySearchingElse: 'Try searching for something else or check out all our delicious categories.',
      setupRestaurantFirst: 'Set up your restaurant first, then start building your amazing menu with delicious dishes, categories, and pricing.',
      editDish: 'Edit Dish',
      dishName: 'Dish Name',
      shortCode: 'Short Code',
      price: 'Price (‚Çπ)',
      foodType: 'Food Type',
      spiceLevel: 'Spice Level',
      addDish: 'Add Dish',
      updateDish: 'Update Dish',
      deleteDish: 'Delete Dish',
      confirmDelete: 'Are you sure you want to delete this dish?',
      dishAdded: 'Dish added successfully!',
      dishUpdated: 'Dish updated successfully!',
      dishDeleted: 'Dish deleted successfully!',
      enterDishName: 'Enter dish name',
      enterPrice: 'Enter price',
      describeDish: 'Describe this dish...',
      selectCategory: 'Select category',
      addNewCategory: 'Add new category',
      categoryName: 'Category name',
      categoryDescription: 'Description (optional)',
      categoryAdded: 'Category added successfully!',
      categoryUpdated: 'Category updated successfully!',
      categoryDeleted: 'Category deleted successfully!',
      confirmDeleteCategory: 'Are you sure you want to delete this category?',
      categoryInUse: 'Cannot delete category. Some dishes are using this category.',
      noCategories: 'No categories found',
      uploadMenu: 'Upload Menu',
      freshOrder: 'Fresh Order',
      uploadFromDevice: 'Upload from Device',
      takePhoto: 'Take Photo',
      menuUploaded: 'Menu uploaded successfully!',
      uploadError: 'Upload failed. Please try again.',
      aiProcessing: 'AI is processing your menu...',
      noMenuItems: 'No menu items found',
      searchMenu: 'Search menu items...',
      allCategories: 'All Categories',
      filterByCategory: 'Filter by category',
      gridView: 'Grid View',
      listView: 'List View'
    },
    
    // Admin
    admin: {
      title: 'Admin Panel',
      restaurantSettings: 'Restaurant Settings',
      addRestaurant: 'Add Restaurant',
      adding: 'Adding...',
      addNewStaff: 'Add New Staff Member',
      selectPageAccess: 'Select which pages this staff member can access. Default access includes Dashboard, Orders, Tables, and Menu.',
      startDate: 'Start Date',
      selectRestaurantFirst: 'Select a restaurant first',
      noStaffFound: 'No staff members found',
      restaurantName: 'Restaurant Name',
      restaurantDescription: 'Description',
      restaurantAddress: 'Address',
      restaurantPhone: 'Phone',
      restaurantEmail: 'Email',
      restaurantCuisine: 'Cuisine',
      restaurantTimings: 'Timings',
      openTime: 'Open Time',
      closeTime: 'Close Time',
      lastOrderTime: 'Last Order Time',
      restaurantAdded: 'Restaurant added successfully!',
      restaurantUpdated: 'Restaurant updated successfully!',
      restaurantDeleted: 'Restaurant deleted successfully!',
      confirmDeleteRestaurant: 'Are you sure you want to delete this restaurant?',
      enterRestaurantName: 'Enter restaurant name',
      enterDescription: 'Enter description',
      enterAddress: 'Enter address',
      enterPhone: 'Enter phone number',
      enterEmail: 'Enter email address',
      selectCuisine: 'Select cuisine type',
      noRestaurants: 'No restaurants found',
      restaurantDetails: 'Restaurant Details',
      ownerInfo: 'Owner Information',
      staffManagement: 'Staff Management',
      addStaff: 'Add Staff',
      staffName: 'Staff Name',
      staffRole: 'Role',
      staffPhone: 'Phone Number',
      staffEmail: 'Email',
      waiter: 'Waiter',
      chef: 'Chef',
      manager: 'Manager',
      staffAdded: 'Staff added successfully!',
      staffUpdated: 'Staff updated successfully!',
      staffDeleted: 'Staff deleted successfully!',
      confirmDeleteStaff: 'Are you sure you want to delete this staff member?',
      noStaff: 'No staff members found'
    }
  },
  
  hi: {
    // Common
    common: {
      loading: '‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...',
      error: '‡§§‡•ç‡§∞‡•Å‡§ü‡§ø',
      success: '‡§∏‡§´‡§≤‡§§‡§æ',
      cancel: '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç',
      save: '‡§∏‡§π‡•á‡§ú‡•á‡§Ç',
      delete: '‡§π‡§ü‡§æ‡§è‡§Ç',
      edit: '‡§∏‡§Ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
      add: '‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
      close: '‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡•á‡§Ç',
      confirm: '‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç',
      yes: '‡§π‡§æ‡§Å',
      no: '‡§®‡§π‡•Ä‡§Ç',
      search: '‡§ñ‡•ã‡§ú‡•á‡§Ç',
      filter: '‡§´‡§ø‡§≤‡•ç‡§ü‡§∞',
      clear: '‡§∏‡§æ‡§´ ‡§ï‡§∞‡•á‡§Ç',
      submit: '‡§ú‡§Æ‡§æ ‡§ï‡§∞‡•á‡§Ç',
      back: '‡§µ‡§æ‡§™‡§∏',
      next: '‡§Ö‡§ó‡§≤‡§æ',
      previous: '‡§™‡§ø‡§õ‡§≤‡§æ',
      done: '‡§π‡•ã ‡§ó‡§Ø‡§æ',
      retry: '‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏',
      refresh: '‡§∞‡§ø‡§´‡•ç‡§∞‡•á‡§∂',
      view: '‡§¶‡•á‡§ñ‡•á‡§Ç',
      details: '‡§µ‡§ø‡§µ‡§∞‡§£',
      settings: '‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏',
      profile: '‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤',
      logout: '‡§≤‡•â‡§ó‡§Ü‡§â‡§ü',
      login: '‡§≤‡•â‡§ó‡§ø‡§®',
      register: '‡§∞‡§ú‡§ø‡§∏‡•ç‡§ü‡§∞',
      email: '‡§à‡§Æ‡•á‡§≤',
      password: '‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§°',
      phone: '‡§´‡•ã‡§®',
      name: '‡§®‡§æ‡§Æ',
      address: '‡§™‡§§‡§æ',
      city: '‡§∂‡§π‡§∞',
      state: '‡§∞‡§æ‡§ú‡•ç‡§Ø',
      country: '‡§¶‡•á‡§∂',
      zipCode: '‡§™‡§ø‡§® ‡§ï‡•ã‡§°',
      date: '‡§§‡§æ‡§∞‡•Ä‡§ñ',
      time: '‡§∏‡§Æ‡§Ø',
      amount: '‡§∞‡§æ‡§∂‡§ø',
      quantity: '‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ',
      total: '‡§ï‡•Å‡§≤',
      subtotal: '‡§â‡§™-‡§Ø‡•ã‡§ó',
      tax: '‡§ï‡§∞',
      discount: '‡§õ‡•Ç‡§ü',
      price: '‡§ï‡•Ä‡§Æ‡§§',
      status: '‡§∏‡•ç‡§•‡§ø‡§§‡§ø',
      description: '‡§µ‡§ø‡§µ‡§∞‡§£',
      notes: '‡§®‡•ã‡§ü‡•ç‡§∏',
      category: '‡§∂‡•ç‡§∞‡•á‡§£‡•Ä',
      available: '‡§â‡§™‡§≤‡§¨‡•ç‡§ß',
      unavailable: '‡§Ö‡§®‡•Å‡§™‡§≤‡§¨‡•ç‡§ß',
      active: '‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø',
      inactive: '‡§®‡§ø‡§∑‡•ç‡§ï‡•ç‡§∞‡§ø‡§Ø',
      pending: '‡§≤‡§Ç‡§¨‡§ø‡§§',
      completed: '‡§™‡•Ç‡§∞‡•ç‡§£',
      cancelled: '‡§∞‡§¶‡•ç‡§¶',
      processing: '‡§™‡•ç‡§∞‡§∏‡§Ç‡§∏‡•ç‡§ï‡§∞‡§£...',
      veg: '‡§∂‡§æ‡§ï‡§æ‡§π‡§æ‡§∞‡•Ä',
      nonVeg: '‡§Æ‡§æ‡§Ç‡§∏‡§æ‡§π‡§æ‡§∞‡•Ä',
      mild: '‡§π‡§≤‡•ç‡§ï‡§æ',
      medium: '‡§Æ‡§ß‡•ç‡§Ø‡§Æ',
      hot: '‡§§‡•Ä‡§ñ‡§æ',
      items: '‡§Ü‡§á‡§ü‡§Æ'
    },
    
    // Navigation
    nav: {
      dashboard: '‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°',
      menu: '‡§Æ‡•á‡§®‡•ç‡§Ø‡•Ç',
      orders: '‡§ë‡§∞‡•ç‡§°‡§∞',
      tables: '‡§ü‡•á‡§¨‡§≤',
      customers: '‡§ó‡•ç‡§∞‡§æ‡§π‡§ï',
      inventory: '‡§á‡§®‡•ç‡§µ‡•á‡§Ç‡§ü‡§∞‡•Ä',
      analytics: '‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£',
      billing: '‡§¨‡§ø‡§≤‡§ø‡§Ç‡§ó',
      admin: '‡§è‡§°‡§Æ‡§ø‡§®',
      history: '‡§ë‡§∞‡•ç‡§°‡§∞',
      kot: '‡§∞‡§∏‡•ã‡§à'
    },
    
    // Login Page
    login: {
      title: 'DineOpen ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à',
      subtitle: '‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä',
      restaurantOwner: '‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§Æ‡§æ‡§≤‡§ø‡§ï',
      staffMember: '‡§∏‡•ç‡§ü‡§æ‡§´ ‡§∏‡§¶‡§∏‡•ç‡§Ø',
      phoneLogin: '‡§´‡•ã‡§® ‡§≤‡•â‡§ó‡§ø‡§®',
      googleLogin: 'Google ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç',
      enterPhone: '‡§Ö‡§™‡§®‡§æ ‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      phonePlaceholder: '+91 9876543210',
      validPhone: '‡§µ‡•à‡§ß ‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞',
      sendingOtp: 'OTP ‡§≠‡•á‡§ú‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...',
      sendOtp: 'OTP ‡§≠‡•á‡§ú‡•á‡§Ç',
      orContinueWith: '‡§Ø‡§æ ‡§á‡§∏‡§ï‡•á ‡§∏‡§æ‡§• ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç',
      signingIn: '‡§∏‡§æ‡§á‡§® ‡§á‡§® ‡§π‡•ã ‡§∞‡§π‡•á ‡§π‡•à‡§Ç...',
      googleDescription: '‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§Æ‡§æ‡§≤‡§ø‡§ï Google ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§ñ‡§æ‡§§‡•á ‡§¨‡§®‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç',
      enterOtp: 'OTP ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      otpPlaceholder: '6 ‡§Ö‡§Ç‡§ï‡•ã‡§Ç ‡§ï‡§æ OTP ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      verifyOtp: 'OTP ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
      resendOtp: 'OTP ‡§™‡•Å‡§®‡§É ‡§≠‡•á‡§ú‡•á‡§Ç',
      invalidPhone: '‡§ï‡•É‡§™‡§Ø‡§æ ‡§è‡§ï ‡§µ‡•à‡§ß ‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      invalidOtp: '‡§ï‡•É‡§™‡§Ø‡§æ ‡§è‡§ï ‡§µ‡•à‡§ß 6 ‡§Ö‡§Ç‡§ï‡•ã‡§Ç ‡§ï‡§æ OTP ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      loginSuccess: '‡§≤‡•â‡§ó‡§ø‡§® ‡§∏‡§´‡§≤!',
      loginError: '‡§≤‡•â‡§ó‡§ø‡§® ‡§Ö‡§∏‡§´‡§≤‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§',
      otpSent: 'OTP ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§≠‡•á‡§ú‡§æ ‡§ó‡§Ø‡§æ!',
      otpError: 'OTP ‡§≠‡•á‡§ú‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Ö‡§∏‡§´‡§≤‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§',
      verificationError: 'OTP ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§® ‡§Ö‡§∏‡§´‡§≤‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§',
      loginCancelled: '‡§≤‡•â‡§ó‡§ø‡§® ‡§∞‡§¶‡•ç‡§¶‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§',
      popupBlocked: '‡§™‡•â‡§™‡§Ö‡§™ ‡§Ö‡§µ‡§∞‡•Å‡§¶‡•ç‡§ß‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡•â‡§™‡§Ö‡§™ ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§Ç ‡§î‡§∞ ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§',
      defaultOtp: '‡§°‡•á‡§Æ‡•ã ‡§ï‡•á ‡§≤‡§ø‡§è, OTP ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç: 1234',
      newUser: '‡§®‡§Ø‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ? ‡§Ü‡§™‡§ï‡•ã ‡§∏‡•á‡§ü‡§Ö‡§™ ‡§™‡§∞ ‡§∞‡•Ä‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§è‡§ó‡§æ‡•§',
      existingUser: '‡§µ‡§æ‡§™‡§∏ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à!'
    },
    
    // Dashboard
    dashboard: {
      title: '‡§ë‡§∞‡•ç‡§°‡§∞ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§®',
      addItem: '‡§Ü‡§á‡§ü‡§Æ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
      searchOrder: '‡§ü‡•á‡§¨‡§≤ ‡§®‡§Ç‡§¨‡§∞ ‡§Ø‡§æ ‡§ë‡§∞‡•ç‡§°‡§∞ ID ‡§∏‡•á ‡§ñ‡•ã‡§ú‡•á‡§Ç...',
      quickAdd: '‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç: ‡§®‡§æ‡§Æ ‡§Ø‡§æ ‡§ï‡•ã‡§° ‡§ü‡§æ‡§á‡§™ ‡§ï‡§∞‡•á‡§Ç...',
      orderSummary: '‡§ë‡§∞‡•ç‡§°‡§∞ ‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂',
      menuCategories: '‡§Æ‡•á‡§®‡•ç‡§Ø‡•Ç ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç',
      yourOrder: '‡§Ü‡§™‡§ï‡§æ ‡§ë‡§∞‡•ç‡§°‡§∞',
      clearOrder: '‡§ë‡§∞‡•ç‡§°‡§∞ ‡§∏‡§æ‡§´ ‡§ï‡§∞‡•á‡§Ç',
      placeOrder: '‡§ë‡§∞‡•ç‡§°‡§∞ ‡§¶‡•á‡§Ç',
      saveOrder: '‡§ë‡§∞‡•ç‡§°‡§∞ ‡§∏‡§π‡•á‡§ú‡•á‡§Ç',
      completeBilling: '‡§¨‡§ø‡§≤‡§ø‡§Ç‡§ó ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ï‡§∞‡•á‡§Ç',
      tableNumber: '‡§ü‡•á‡§¨‡§≤ ‡§®‡§Ç‡§¨‡§∞',
      customerName: '‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§ï‡§æ ‡§®‡§æ‡§Æ',
      customerPhone: '‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§ï‡§æ ‡§´‡•ã‡§®',
      dineIn: '‡§°‡§æ‡§á‡§® ‡§á‡§®',
      takeaway: '‡§ü‡•á‡§ï‡§Ö‡§µ‡•á',
      noItems: '‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ï‡•ã‡§à ‡§Ü‡§á‡§ü‡§Æ ‡§®‡§π‡•Ä‡§Ç',
      totalAmount: '‡§ï‡•Å‡§≤ ‡§∞‡§æ‡§∂‡§ø',
      paymentMethod: '‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§µ‡§ø‡§ß‡§ø',
      cash: '‡§®‡§ï‡§¶',
      card: '‡§ï‡§æ‡§∞‡•ç‡§°',
      upi: 'UPI',
      orderPlaced: '‡§ë‡§∞‡•ç‡§°‡§∞ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ!',
      orderCompleted: '‡§ë‡§∞‡•ç‡§°‡§∞ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§π‡•Å‡§Ü!',
      paymentCompleted: '‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§π‡•Å‡§Ü!',
      selectPaymentMethod: '‡§ï‡•É‡§™‡§Ø‡§æ ‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§µ‡§ø‡§ß‡§ø ‡§ö‡•Å‡§®‡•á‡§Ç',
      enterTableNumber: '‡§ï‡•É‡§™‡§Ø‡§æ ‡§ü‡•á‡§¨‡§≤ ‡§®‡§Ç‡§¨‡§∞ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      enterCustomerInfo: '‡§ï‡•É‡§™‡§Ø‡§æ ‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      emptyCart: '‡§ï‡§æ‡§∞‡•ç‡§ü ‡§ñ‡§æ‡§≤‡•Ä ‡§π‡•à',
      addItemsFirst: '‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡§π‡§≤‡•á ‡§ï‡§æ‡§∞‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§Ü‡§á‡§ü‡§Æ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
      orderProcessing: '‡§ë‡§∞‡•ç‡§°‡§∞ ‡§™‡•ç‡§∞‡§∏‡§Ç‡§∏‡•ç‡§ï‡§∞‡§£...',
      paymentProcessing: '‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§™‡•ç‡§∞‡§∏‡§Ç‡§∏‡•ç‡§ï‡§∞‡§£...'
    },
    
    // Menu
    menu: {
      title: '‡§Æ‡•á‡§®‡•ç‡§Ø‡•Ç ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§®',
      addNewDish: '‡§®‡§Ø‡§æ ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
      bulkUpload: '‡§¨‡§≤‡•ç‡§ï ‡§Ö‡§™‡§≤‡•ã‡§°',
      searchMenu: '‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§ñ‡•ã‡§ú‡•á‡§Ç...',
      allTypes: '‡§∏‡§≠‡•Ä ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞',
      allCategories: '‡§∏‡§≠‡•Ä ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç',
      gridView: '‡§ó‡•ç‡§∞‡§ø‡§° ‡§µ‡•ç‡§Ø‡•Ç',
      listView: '‡§≤‡§ø‡§∏‡•ç‡§ü ‡§µ‡•ç‡§Ø‡•Ç',
      noDishesFound: '‡§ï‡•ã‡§à ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ',
      menuReady: '‡§Æ‡•á‡§®‡•ç‡§Ø‡•Ç ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§§‡•à‡§Ø‡§æ‡§∞! üçΩÔ∏è',
      tryDifferentSearch: '‡§Ö‡§≤‡§ó ‡§ñ‡•ã‡§ú ‡§∂‡§¨‡•ç‡§¶ ‡§Ü‡§ú‡§º‡§Æ‡§æ‡§è‡§Ç',
      createMenu: '‡§Ö‡§™‡§®‡§æ ‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§Æ‡•á‡§®‡•ç‡§Ø‡•Ç ‡§¨‡§®‡§æ‡§è‡§Ç',
      trySearchingElse: '‡§ï‡•Å‡§õ ‡§î‡§∞ ‡§ñ‡•ã‡§ú‡§®‡•á ‡§ï‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç ‡§Ø‡§æ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§∏‡§≠‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§¶‡§ø‡§∑‡•ç‡§ü ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§¶‡•á‡§ñ‡•á‡§Ç‡•§',
      setupRestaurantFirst: '‡§™‡§π‡§≤‡•á ‡§Ö‡§™‡§®‡§æ ‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§∏‡•á‡§ü‡§Ö‡§™ ‡§ï‡§∞‡•á‡§Ç, ‡§´‡§ø‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§¶‡§ø‡§∑‡•ç‡§ü ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®‡•ã‡§Ç, ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡•ã‡§Ç ‡§î‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§£ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ö‡§™‡§®‡§æ ‡§Ö‡§¶‡•ç‡§≠‡•Å‡§§ ‡§Æ‡•á‡§®‡•ç‡§Ø‡•Ç ‡§¨‡§®‡§æ‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç‡•§',
      editDish: '‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§∏‡§Ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
      dishName: '‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§ï‡§æ ‡§®‡§æ‡§Æ',
      shortCode: '‡§∂‡•â‡§∞‡•ç‡§ü ‡§ï‡•ã‡§°',
      price: '‡§ï‡•Ä‡§Æ‡§§ (‚Çπ)',
      foodType: '‡§≠‡•ã‡§ú‡§® ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞',
      spiceLevel: '‡§Æ‡§∏‡§æ‡§≤‡•á ‡§ï‡§æ ‡§∏‡•ç‡§§‡§∞',
      addDish: '‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
      updateDish: '‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç',
      deleteDish: '‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§π‡§ü‡§æ‡§è‡§Ç',
      confirmDelete: '‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§µ‡§æ‡§ï‡§à ‡§á‡§∏ ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§ï‡•ã ‡§π‡§ü‡§æ‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?',
      dishAdded: '‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ!',
      dishUpdated: '‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§Ö‡§™‡§°‡•á‡§ü ‡§π‡•Å‡§Ü!',
      dishDeleted: '‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§π‡§ü‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ!',
      enterDishName: '‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      enterPrice: '‡§ï‡•Ä‡§Æ‡§§ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      describeDish: '‡§á‡§∏ ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§ï‡§æ ‡§µ‡§∞‡•ç‡§£‡§® ‡§ï‡§∞‡•á‡§Ç...',
      selectCategory: '‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ö‡•Å‡§®‡•á‡§Ç',
      addNewCategory: '‡§®‡§à ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
      categoryName: '‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ï‡§æ ‡§®‡§æ‡§Æ',
      categoryDescription: '‡§µ‡§ø‡§µ‡§∞‡§£ (‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï)',
      categoryAdded: '‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§ú‡•ã‡§°‡§º‡•Ä ‡§ó‡§à!',
      categoryUpdated: '‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§Ö‡§™‡§°‡•á‡§ü ‡§π‡•Å‡§à!',
      categoryDeleted: '‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§π‡§ü‡§æ‡§à ‡§ó‡§à!',
      confirmDeleteCategory: '‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§µ‡§æ‡§ï‡§à ‡§á‡§∏ ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ï‡•ã ‡§π‡§ü‡§æ‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?',
      categoryInUse: '‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§π‡§ü‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§∏‡§ï‡§§‡•á‡•§ ‡§ï‡•Å‡§õ ‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® ‡§á‡§∏ ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§',
      noCategories: '‡§ï‡•ã‡§à ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•Ä',
      uploadMenu: '‡§Æ‡•á‡§®‡•ç‡§Ø‡•Ç ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç',
      freshOrder: '‡§®‡§Ø‡§æ ‡§ë‡§∞‡•ç‡§°‡§∞',
      uploadFromDevice: '‡§°‡§ø‡§µ‡§æ‡§á‡§∏ ‡§∏‡•á ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç',
      takePhoto: '‡§´‡•ã‡§ü‡•ã ‡§≤‡•á‡§Ç',
      menuUploaded: '‡§Æ‡•á‡§®‡•ç‡§Ø‡•Ç ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§Ö‡§™‡§≤‡•ã‡§° ‡§π‡•Å‡§Ü!',
      uploadError: '‡§Ö‡§™‡§≤‡•ã‡§° ‡§Ö‡§∏‡§´‡§≤‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§',
      aiProcessing: 'AI ‡§Ü‡§™‡§ï‡•á ‡§Æ‡•á‡§®‡•ç‡§Ø‡•Ç ‡§ï‡•ã ‡§™‡•ç‡§∞‡§∏‡§Ç‡§∏‡•ç‡§ï‡§∞‡§£ ‡§ï‡§∞ ‡§∞‡§π‡§æ ‡§π‡•à...',
      noMenuItems: '‡§ï‡•ã‡§à ‡§Æ‡•á‡§®‡•ç‡§Ø‡•Ç ‡§Ü‡§á‡§ü‡§Æ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ',
      searchMenu: '‡§Æ‡•á‡§®‡•ç‡§Ø‡•Ç ‡§Ü‡§á‡§ü‡§Æ ‡§ñ‡•ã‡§ú‡•á‡§Ç...',
      allCategories: '‡§∏‡§≠‡•Ä ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç',
      filterByCategory: '‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§´‡§ø‡§≤‡•ç‡§ü‡§∞ ‡§ï‡§∞‡•á‡§Ç',
      gridView: '‡§ó‡•ç‡§∞‡§ø‡§° ‡§µ‡•ç‡§Ø‡•Ç',
      listView: '‡§≤‡§ø‡§∏‡•ç‡§ü ‡§µ‡•ç‡§Ø‡•Ç'
    },
    
    // Admin
    admin: {
      title: '‡§è‡§°‡§Æ‡§ø‡§® ‡§™‡•à‡§®‡§≤',
      restaurantSettings: '‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏',
      addRestaurant: '‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
      adding: '‡§ú‡•ã‡§°‡§º‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...',
      addNewStaff: '‡§®‡§Ø‡§æ ‡§∏‡•ç‡§ü‡§æ‡§´ ‡§∏‡§¶‡§∏‡•ç‡§Ø ‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
      selectPageAccess: '‡§ö‡•Å‡§®‡•á‡§Ç ‡§ï‡§ø ‡§Ø‡§π ‡§∏‡•ç‡§ü‡§æ‡§´ ‡§∏‡§¶‡§∏‡•ç‡§Ø ‡§ï‡§ø‡§® ‡§™‡•á‡§ú‡•ã‡§Ç ‡§§‡§ï ‡§™‡§π‡•Å‡§Ç‡§ö ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§ ‡§°‡§ø‡§´‡§º‡•â‡§≤‡•ç‡§ü ‡§™‡§π‡•Å‡§Ç‡§ö ‡§Æ‡•á‡§Ç ‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°, ‡§ë‡§∞‡•ç‡§°‡§∞, ‡§ü‡•á‡§¨‡§≤ ‡§î‡§∞ ‡§Æ‡•á‡§®‡•ç‡§Ø‡•Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§',
      startDate: '‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§§‡§æ‡§∞‡•Ä‡§ñ',
      selectRestaurantFirst: '‡§™‡§π‡§≤‡•á ‡§è‡§ï ‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§ö‡•Å‡§®‡•á‡§Ç',
      noStaffFound: '‡§ï‡•ã‡§à ‡§∏‡•ç‡§ü‡§æ‡§´ ‡§∏‡§¶‡§∏‡•ç‡§Ø ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ',
      restaurantName: '‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§ï‡§æ ‡§®‡§æ‡§Æ',
      restaurantDescription: '‡§µ‡§ø‡§µ‡§∞‡§£',
      restaurantAddress: '‡§™‡§§‡§æ',
      restaurantPhone: '‡§´‡•ã‡§®',
      restaurantEmail: '‡§à‡§Æ‡•á‡§≤',
      restaurantCuisine: '‡§≠‡•ã‡§ú‡§® ‡§∂‡•à‡§≤‡•Ä',
      restaurantTimings: '‡§∏‡§Æ‡§Ø',
      openTime: '‡§ñ‡•Å‡§≤‡§®‡•á ‡§ï‡§æ ‡§∏‡§Æ‡§Ø',
      closeTime: '‡§¨‡§Ç‡§¶ ‡§π‡•ã‡§®‡•á ‡§ï‡§æ ‡§∏‡§Æ‡§Ø',
      lastOrderTime: '‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§ë‡§∞‡•ç‡§°‡§∞ ‡§ï‡§æ ‡§∏‡§Æ‡§Ø',
      restaurantAdded: '‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ!',
      restaurantUpdated: '‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§Ö‡§™‡§°‡•á‡§ü ‡§π‡•Å‡§Ü!',
      restaurantDeleted: '‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§π‡§ü‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ!',
      confirmDeleteRestaurant: '‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§µ‡§æ‡§ï‡§à ‡§á‡§∏ ‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§ï‡•ã ‡§π‡§ü‡§æ‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?',
      enterRestaurantName: '‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      enterDescription: '‡§µ‡§ø‡§µ‡§∞‡§£ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      enterAddress: '‡§™‡§§‡§æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      enterPhone: '‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      enterEmail: '‡§à‡§Æ‡•á‡§≤ ‡§™‡§§‡§æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      selectCuisine: '‡§≠‡•ã‡§ú‡§® ‡§∂‡•à‡§≤‡•Ä ‡§ö‡•Å‡§®‡•á‡§Ç',
      noRestaurants: '‡§ï‡•ã‡§à ‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ',
      restaurantDetails: '‡§∞‡•á‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§Ç‡§ü ‡§µ‡§ø‡§µ‡§∞‡§£',
      ownerInfo: '‡§Æ‡§æ‡§≤‡§ø‡§ï ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä',
      staffManagement: '‡§∏‡•ç‡§ü‡§æ‡§´ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§®',
      addStaff: '‡§∏‡•ç‡§ü‡§æ‡§´ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
      staffName: '‡§∏‡•ç‡§ü‡§æ‡§´ ‡§ï‡§æ ‡§®‡§æ‡§Æ',
      staffRole: '‡§≠‡•Ç‡§Æ‡§ø‡§ï‡§æ',
      staffPhone: '‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞',
      staffEmail: '‡§à‡§Æ‡•á‡§≤',
      waiter: '‡§µ‡•á‡§ü‡§∞',
      chef: '‡§∂‡•á‡§´',
      manager: '‡§Æ‡•à‡§®‡•á‡§ú‡§∞',
      staffAdded: '‡§∏‡•ç‡§ü‡§æ‡§´ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ!',
      staffUpdated: '‡§∏‡•ç‡§ü‡§æ‡§´ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§Ö‡§™‡§°‡•á‡§ü ‡§π‡•Å‡§Ü!',
      staffDeleted: '‡§∏‡•ç‡§ü‡§æ‡§´ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§π‡§ü‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ!',
      confirmDeleteStaff: '‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§µ‡§æ‡§ï‡§à ‡§á‡§∏ ‡§∏‡•ç‡§ü‡§æ‡§´ ‡§∏‡§¶‡§∏‡•ç‡§Ø ‡§ï‡•ã ‡§π‡§ü‡§æ‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?',
      noStaff: '‡§ï‡•ã‡§à ‡§∏‡•ç‡§ü‡§æ‡§´ ‡§∏‡§¶‡§∏‡•ç‡§Ø ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ'
    }
  }
};

// Language detection and storage
const getStoredLanguage = () => {
  if (typeof window !== 'undefined') {
    return localStorage.getItem('dineopen_language') || 'en';
  }
  return 'en';
};

const setStoredLanguage = (language) => {
  if (typeof window !== 'undefined') {
    localStorage.setItem('dineopen_language', language);
  }
};

// Translation function
export const t = (key, params = {}) => {
  const language = getStoredLanguage();
  const keys = key.split('.');
  let translation = translations[language];
  
  for (const k of keys) {
    if (translation && translation[k]) {
      translation = translation[k];
    } else {
      // Fallback to English if translation not found
      translation = translations.en;
      for (const fallbackKey of keys) {
        if (translation && translation[fallbackKey]) {
          translation = translation[fallbackKey];
        } else {
          return key; // Return key if translation not found
        }
      }
      break;
    }
  }
  
  // Replace parameters in translation
  if (typeof translation === 'string') {
    return translation.replace(/\{\{(\w+)\}\}/g, (match, param) => {
      return params[param] || match;
    });
  }
  
  return translation || key;
};

// Language management
export const getCurrentLanguage = () => getStoredLanguage();

export const setLanguage = (language) => {
  if (translations[language]) {
    setStoredLanguage(language);
    // Dispatch custom event to notify components of language change
    if (typeof window !== 'undefined') {
      window.dispatchEvent(new CustomEvent('languageChanged', { 
        detail: { language } 
      }));
    }
    return true;
  }
  return false;
};

export const getAvailableLanguages = () => [
  { code: 'en', name: 'English', nativeName: 'English' },
  { code: 'hi', name: 'Hindi', nativeName: '‡§π‡§ø‡§®‡•ç‡§¶‡•Ä' }
];

export default {
  t,
  getCurrentLanguage,
  setLanguage,
  getAvailableLanguages
};




